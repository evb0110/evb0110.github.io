{"version":3,"sources":["webpack:///./src/pages/syriac/Transliteration.vue?6ab4","webpack:///./src/pages/syriac/transliterationHelpers.js","webpack:///src/pages/syriac/Transliteration.vue","webpack:///./src/pages/syriac/Transliteration.vue?5fe0","webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///./src/pages/syriac/Transliteration.vue","webpack:///./src/pages/syriac/Transliteration.vue?233d"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","button","key","text","attrs","color","on","$event","doAction","value","_v","_s","class","chosen","direction","textareaColors","source","inputText","onInput","target","targetText","name","idx","toggle","translitVariant","tuple","i","letter","staticRenderFns","copyToClipboard","textareaSelector","textarea","document","querySelector","select","execCommand","multipleReplace","str","fromArray","toArray","length","otherReg","join","RegExp","replace","from","to","reg","console","log","inputToTop","input","focus","scrollTop","setSelectionRange","makeChosen","baseMixins","mixins","props","autoGrow","noResize","rowHeight","type","Number","default","validator","v","isNaN","parseFloat","rows","parseInt","computed","classes","VTextField","noResizeHandle","watch","lazyValue","$nextTick","mounted","setTimeout","methods","calculateInputHeight","$refs","height","minHeight","Math","genInput","onKeyDown","isFocused","e","component","VBtn","VTextarea"],"mappings":"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","file":"js/SyriacTransliteration.4ccb37b3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"action-buttons mb-7 d-flex justify-center\"},_vm._l((_vm.actionButtons),function(button){return _c('v-btn',{key:button.text,staticClass:\"ml-1\",attrs:{\"color\":button.color,\"depressed\":\"\",\"large\":\"\",\"tile\":\"\"},on:{\"click\":function($event){return _vm.doAction(button.value)}}},[_vm._v(_vm._s(button.text))])}),1),_c('div',{staticClass:\"textareas d-flex\"},[_c('div',{staticClass:\"mr-5\"},[_c('v-btn',{staticClass:\"no-mouse\",attrs:{\"depressed\":\"\",\"tile\":\"\",\"small\":\"\",\"outlined\":\"\"}},[_vm._v(\"Source text\")]),_c('v-textarea',{staticClass:\"textarea-left textarea\",class:!_vm.chosen.direction ? 'textarea-syriac': '',attrs:{\"no-resize\":\"\",\"background-color\":_vm.textareaColors.source,\"placeholder\":\"Change the conversion direction if needed, type or paste the text and press Convert\",\"rows\":\"15\",\"outlined\":\"\",\"value\":_vm.inputText},on:{\"input\":_vm.onInput}})],1),_c('div',{staticClass:\"ml-5\"},[_c('v-btn',{staticClass:\"no-mouse\",attrs:{\"depressed\":\"\",\"tile\":\"\",\"small\":\"\",\"outlined\":\"\"}},[_vm._v(\"Target text\")]),_c('v-textarea',{staticClass:\"textarea-right textarea\",class:_vm.chosen.direction ? 'textarea-syriac': '',attrs:{\"no-resize\":\"\",\"background-color\":_vm.textareaColors.target,\"rows\":\"15\",\"outlined\":\"\",\"value\":_vm.targetText}})],1)]),_c('div',{staticClass:\"switchers d-flex justify-space-around mb-7\"},[_c('div',{staticClass:\"switcher\"},_vm._l((_vm.directions),function(name,idx){return _c('v-btn',{key:idx,attrs:{\"depressed\":\"\",\"large\":\"\",\"outlined\":idx === _vm.chosen.direction,\"text\":idx !== _vm.chosen.direction},on:{\"click\":function($event){return _vm.toggle(idx, 'direction')}}},[_vm._v(_vm._s(name)+\" \")])}),1),_c('div',{staticClass:\"switcher\"},_vm._l((_vm.translitVariants),function(name,idx){return _c('v-btn',{key:idx,attrs:{\"depressed\":\"\",\"large\":\"\",\"tile\":\"\",\"outlined\":idx === _vm.chosen.translitVariant,\"text\":idx !== _vm.chosen.translitVariant},on:{\"click\":function($event){return _vm.toggle(idx, 'translitVariant')}}},[_vm._v(_vm._s(name)+\" \")])}),1)]),_c('div',{staticClass:\"d-flex justify-center\"},_vm._l((_vm.twoAlphabets),function(tuple,i){return _c('div',{key:i,staticClass:\"wrapper\"},_vm._l((tuple),function(letter,idx){return _c('v-textarea',{key:letter,staticClass:\"mr-1 mb-1\",attrs:{\"rows\":\"1\",\"cols\":\"1\",\"no-resize\":\"\",\"value\":letter,\"hide-details\":true,\"background-color\":idx ? _vm.textareaColors.target : _vm.textareaColors.source,\"outlined\":\"\",\"maxlength\":2}})}),1)}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export function copyToClipboard(textareaSelector) {\n    let textarea = document.querySelector(textareaSelector);\n    textarea.select();\n    document.execCommand(\"copy\");\n}\n\nexport function multipleReplace(str, fromArray, toArray) {\n    if (fromArray.length !== toArray.length) {\n        console.log(\"Arrays of different length in multipleReplace\");\n        return;\n    }\n    let otherReg = \"[^\" +\n        fromArray.join(\"\") +\n        \"\\\\s\\\\n\\\\d\\\\.:<>\\\\{\\\\}\\\\(\\\\)#\" +\n        \"]\";\n    otherReg = RegExp(otherReg, \"g\");\n    str = str.replace( otherReg, \"\" );\n    for (let i=0; i<fromArray.length; i++) {\n        let from = fromArray[i].replace( /\\s/g, \"\");\n        let to = toArray[i].replace( /\\s/g, \"\");\n        let reg = RegExp( from, \"g\" );\n        str = str.replace( reg, to )\n    }\n    return str;\n}\n\nexport function inputToTop(textareaSelector) {\n    const input = document.querySelector(textareaSelector);\n    input.focus();\n    input.scrollTop = 0;\n    input.setSelectionRange(0,0);\n}\n","<template>\n    <div class=\"container\">\n        <div class=\"action-buttons mb-7 d-flex justify-center\">\n            <v-btn v-for=\"button in actionButtons\"\n                   :key=\"button.text\"\n                   :color=\"button.color\"\n                   class=\"ml-1\"\n                   @click=\"doAction(button.value)\"\n                   depressed large tile>{{ button.text }}</v-btn>\n        </div>\n        <div class=\"textareas d-flex\">\n            <div class=\"mr-5\">\n                <v-btn depressed tile small outlined class=\"no-mouse\">Source text</v-btn>\n                <v-textarea no-resize\n                            :background-color=\"textareaColors.source\"\n                            class=\"textarea-left textarea\"\n                            :class=\"!chosen.direction ? 'textarea-syriac': ''\"\n                            placeholder=\"Change the conversion direction if needed, type or paste the text and press Convert\"\n                            rows=\"15\"\n                            outlined\n                            :value=\"inputText\"\n                            @input=\"onInput\"\n                ></v-textarea>\n            </div>\n\n            <div class=\"ml-5\">\n                <v-btn depressed tile small outlined class=\"no-mouse\">Target text</v-btn>\n                <v-textarea no-resize\n                            :background-color=\"textareaColors.target\"\n                            class=\"textarea-right textarea\"\n                            :class=\"chosen.direction ? 'textarea-syriac': ''\"\n                            rows=\"15\"\n                            outlined\n                            :value=\"targetText\"\n                ></v-textarea>\n            </div>\n\n        </div>\n\n\n        <div class=\"switchers d-flex justify-space-around mb-7\">\n            <div class=\"switcher\">\n                <v-btn v-for=\"(name, idx) in directions\"\n                       :key=\"idx\"\n                       @click=\"toggle(idx, 'direction')\"\n                       depressed large\n                       :outlined=\"idx === chosen.direction\"\n                       :text=\"idx !== chosen.direction\"\n                >{{ name }}\n                </v-btn>\n            </div>\n\n            <div class=\"switcher\">\n                <v-btn v-for=\"(name, idx) in translitVariants\"\n                       :key=\"idx\"\n                       @click=\"toggle(idx, 'translitVariant')\"\n                       depressed large tile\n                       :outlined=\"idx === chosen.translitVariant\"\n                       :text=\"idx !== chosen.translitVariant\"\n                >{{ name }}\n                </v-btn>\n            </div>\n        </div>\n\n\n        <div class=\"d-flex justify-center\">\n            <div class=\"wrapper\" v-for=\"(tuple, i) in twoAlphabets\" :key=\"i\">\n                <v-textarea v-for=\"(letter, idx) in tuple\" rows=\"1\"\n                            cols=\"1\"\n                            class=\"mr-1 mb-1\"\n                            no-resize\n                            :value=\"letter\"\n                            :key=\"letter\"\n                            :hide-details=\"true\"\n                            :background-color=\"idx ? textareaColors.target : textareaColors.source\"\n                            outlined\n                            :maxlength=\"2\"\n                ></v-textarea>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport _ from 'lodash';\nimport appBarTitleMixin from '@/mixins/appBarTitleMixin';\nimport { copyToClipboard, inputToTop, multipleReplace } from '@/pages/syriac/transliterationHelpers';\n\nconst translit = \"ʔbggdhYwzḥṭyklmnssʕppṣqrršt:\";\nconst translit_ansi = \"AbggdhYwzHTyklmnssCppSqrrWt:\";\nconst originalLetters  = \"ܐܒܓܔܕܗܞܘܙܚܛܝܟܠܡܢܣܤܥܦܧܨܩܪܖܫܬ̈\";\nconst actionButtons = [\n    { color: 'warning', text: 'Convert' },\n    { color: 'info', text: 'Clear all' },\n    { color: 'info', text: 'Defaults' },\n    { color: 'success', text: 'Copy to clipboard' },\n].map((button) => ({ ...button, value: _.camelCase(button.text) }))\n\nfunction makeChosen() {\n    return {\n        direction: 0,\n        translitVariant: 0,\n    };\n}\n\nexport default {\n    name: \"Transliteration\",\n    mixins: [appBarTitleMixin],\n    data() {\n        const chosen = makeChosen();\n        return {\n            appBarTitle: 'Syriac Transliteration',\n            directions: Object.freeze(['From Syriac', 'To Syriac']),\n            translitVariants: Object.freeze(['Unicode', 'Simple English']),\n            chosen,\n            translitArr: translit.split(''),\n            translitAnsiArr: translit_ansi.split(''),\n            originalLettersArr: originalLetters.split(''),\n            actionButtons,\n            inputText: '',\n            targetText: '',\n            textareaColors: Object.freeze({\n                source: 'purple lighten-5',\n                target: 'success lighten-5',\n            })\n        };\n    },\n    computed: {\n        twoAlphabets() {\n            const arrays = [\n                this.originalLettersArr,\n                this.chosen.translitVariant ? this.translitAnsiArr : this.translitArr,\n            ];\n            const fromArray = arrays[this.chosen.direction];\n            const toArray = arrays[1 - this.chosen.direction];\n            return fromArray.map((_, idx) => ([fromArray[idx], toArray[idx]]));\n        },\n        alphabetsForConversion() {\n            return this.twoAlphabets.reduce((acc, tuple) => {\n               return [\n                   [...acc[0], tuple[0]],\n                   [...acc[1], tuple[1]],\n               ]\n            }, [[],[]]);\n        }\n    },\n    methods: {\n        toggle(i, value) {\n            this.chosen[value] = i;\n        },\n        convert() {\n            console.log('converting');\n            this.targetText = multipleReplace(this.inputText, ...this.alphabetsForConversion);\n            const sourceTextareaSelector = '.textarea-left textarea';\n            inputToTop(sourceTextareaSelector);\n        },\n        clearAll() {\n            console.log('clearing all');\n            this.inputText = '';\n            this.targetText = '';\n        },\n        defaults() {\n            console.log('making defaults');\n            this.chosen = makeChosen();\n            this.clearAll();\n        },\n        copyToClipboard() {\n            console.log('copying to clipboard');\n            const textareaSelector = '.textarea-right textarea';\n            copyToClipboard(textareaSelector);\n        },\n        doAction(actionName) {\n            const action = this[actionName];\n            if (_.isFunction(action)) {\n                action();\n            }\n        },\n        onInput(text) {\n            this.inputText = text;\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"scss\">\n.textareas {\n    & > div {\n        flex: auto;\n    }\n}\n\n.no-mouse {\n    pointer-events: none;\n}\n\n::v-deep .v-btn__content {\n    min-width: 7rem;\n}\n\n::v-deep .v-btn:not(.v-btn--outlined) {\n    border: thin solid white;\n}\n\n::v-deep .textarea-syriac {\n    textarea {\n        text-align: right;\n    }\n}\n::v-deep .textarea {\n    textarea {\n        font-family: \"Estrangelo Edessa\", sans-serif;\n    }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Transliteration.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Transliteration.vue?vue&type=script&lang=js&\"","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./Transliteration.vue?vue&type=template&id=463bb98e&scoped=true&\"\nimport script from \"./Transliteration.vue?vue&type=script&lang=js&\"\nexport * from \"./Transliteration.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Transliteration.vue?vue&type=style&index=0&id=463bb98e&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"463bb98e\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VBtn,VTextarea})\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Transliteration.vue?vue&type=style&index=0&id=463bb98e&scoped=true&lang=scss&\""],"sourceRoot":""}