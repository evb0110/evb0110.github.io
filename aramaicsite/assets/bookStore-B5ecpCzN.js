var N=Object.defineProperty;var D=(r,t,e)=>t in r?N(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var d=(r,t,e)=>D(r,typeof t!="symbol"?t+"":t,e);import{d as S,a2 as I,J as f,b8 as P,bM as C,c as M}from"./index-Csr_zljy.js";import{o as l}from"./index-Dob3nYDb.js";var m={exports:{}},B={exports:{}};(function(){function r(t){if(typeof t!="string"&&!(t instanceof String))throw new TypeError("toArabic expects a string");if(/^nulla$/i.test(t)||!t.length)return 0;if(t=t.toUpperCase().match(/^(M{0,3})(CM|DC{0,3}|CD|C{0,3})(XC|LX{0,3}|XL|X{0,3})(IX|VI{0,3}|IV|I{0,3})$/),!t)throw new Error("toArabic expects a valid roman number");var e=0;return e+=t[1].length*1e3,t[2]==="CM"?e+=900:t[2]==="CD"?e+=400:e+=t[2].length*100+(t[2][0]==="D"?400:0),t[3]==="XC"?e+=90:t[3]==="XL"?e+=40:e+=t[3].length*10+(t[3][0]==="L"?40:0),t[4]==="IX"?e+=9:t[4]==="IV"?e+=4:e+=t[4].length*1+(t[4][0]==="V"?4:0),e}B.exports=r})();var R=B.exports,x={exports:{}};(function(){function r(e,o,n,s){var a="";switch(e){case 0:return a;case 9:return o+s;case 4:return o+n}for(e>=5&&(a=n,e-=5);e-- >0;)a+=o;return a}function t(e){if(e instanceof Number&&(e=parseInt(e,10)),(typeof e=="string"||e instanceof String)&&(e=parseInt(e,10),isNaN(e)))throw new TypeError("toArabic expects a number");if(typeof e!="number")throw new TypeError("toArabic expects a number");if(isNaN(e))throw new TypeError("toArabic expects a real number");if(e<0)throw new Error("toArabic cannot express negative numbers");if(e>3999)throw new Error("toArabic cannot express numbers over 3999");if(e===0)return"nulla";var o="";return o+=r(Math.floor(e/1e3),"M","",""),e%=1e3,o+=r(Math.floor(e/100),"C","D","M"),e%=100,o+=r(Math.floor(e/10),"X","L","C"),e%=10,o+=r(e,"I","V","X"),o}x.exports=t})();var V=x.exports;(function(){m.exports={toArabic:R,toRoman:V}})();var A=m.exports;class E{constructor(t){d(this,"upgradeQueuePromise",Promise.resolve());this.dbName=t}async getVersion(){return new Promise((t,e)=>{const o=indexedDB.open(this.dbName);o.onsuccess=()=>{const n=o.result,s=n.version;n.close(),t(s)},o.onerror=()=>e(o.error)}).catch(()=>1)}async _openDBRaw(t){let e=await l(this.dbName);if(e.objectStoreNames.contains(t))return e.close(),e=await l(this.dbName),e;e.close();const n=await this.getVersion()+1;return await l(this.dbName,n,{upgrade(s){s.objectStoreNames.contains(t)||s.createObjectStore(t)}})}async _openDB(t){return this.upgradeQueuePromise=this.upgradeQueuePromise.then(this._openDBRaw.bind(this,t)),await this.upgradeQueuePromise,await l(this.dbName)}async set(t,e,o){const s=(await this._openDB(t)).transaction(t,"readwrite");await s.store.put(o,e),await s.done}async get(t,e){const n=(await this._openDB(t)).transaction(t,"readonly"),s=await n.store.get(e);return await n.done,s}}const h=new Map;function y(r){return h.has(r)||h.set(r,new E(r)),h.get(r)}class k{static async get(t,e,o){try{return await y(t).get(e,o)}catch(n){window.console.error(n)}}static async set(t,e,o,n){try{return await y(t).set(e,o,n)}catch(s){window.console.error(s)}}}const p=18,v=-1;function X(r){if(!f.isNaN(Number(r))){let t=Number(r);return t>=1002&&(t-=1),t+p}try{const t=A.toArabic(r);return f.isNumber(t)?t+v:1}catch{return 1}}function T(r){if(r<=p)return A.toRoman(r-v);let t=r-p;return t>=1002&&(t+=1),String(t)}const g=[{title:"Das Neuwestaramäische. VI. Wörterbuch",shortTitle:"Arnold. NWA Wörterbuch",key:"arnold",author:"Werner Arnold",year:2019,linkBase:"https://evb0110.github.io/static/pdf/Arnold-Woerterbuch/pg_",pageCount:1035,getPageNumber:X,getPageString:T}];let i;const _=(async()=>{i=await k.get("bookStore","cache","uint")||new Map})(),O=S("bookStore",()=>{const r=I(async()=>{const o=g.map(P),s=await Promise.all(o);return g.map((a,w)=>{const c=s[w];return{...a,hash:c,to:{name:C.Book,params:{hash:c}}}})},[]),t=M(()=>f.keyBy(r.value,"hash"));async function e(o,n){await _;const s=JSON.stringify({hash:o,pageNumber:n});if(i.has(s)){const b=i.get(s);return b?b.slice(0):null}const a=t.value[o];if(!a)return null;const c=`${a.linkBase}${n.toString().padStart(4,"0")}.pdf`,u=await $(c);return u&&(i.set(s,u),k.set("bookStore","cache","uint",i),u.slice(0))}return{books:r,bookByHash:t,getUintPromise:e}});async function $(r){try{const t=await fetch(r);if(!t.ok)return null;const o=await(await t.blob()).arrayBuffer();return new Uint8Array(o)}catch{return null}}export{O as u};
